@using Microsoft.AspNetCore.Http
@using Microsoft.Extensions.DependencyInjection
@using SchoStack.AspNetCore.HtmlConventions
@using SchoStack.AspNetCore.ModelUrls
@using SchoStack.AspNetCore.Sample.Components
@using SchoStack.AspNetCore.Sample.Controllers
@model AboutViewModel
@{
    ViewData["Title"] = "About";
}
<h2>@ViewData["Title"]</h2>
<h3>@ViewData["Message"]</h3>

<p>Use this area to provide additional information.</p>

@using (Html.Form<AboutInputModel>())
{
    @Html.Input(x => x.Name)
    @Html.ValidationMessage(x => x.Name)
    @Html.Submit("Submiz")

    @Html.Link(new AboutQueryModel(), "Some Link")

    <div>
        @await Url.ForAsync(new AboutQueryModel(), true)
    </div>
}
<form model-url-action="@(await Url.BindModelFor(new AboutInputModel(), true))">
    <button>Something</button>
</form>

<form model-url-action="@(new AboutInputModel())">
    @Html.Input(x => x.Name)
    @Html.ValidationMessage(x => x.Name)
</form>

<a model-url-href="@(new AboutQueryModel())">Test link</a>

<div model-url-data-url="new AboutInputModel()"></div>

@await Component.InvokeAsync(new ComponentQueryModel() { Name = "The Name From Component" })

@using (Html.Form<AboutInputModel4>())
{
    <div>Url: (@(Url.For(new AboutInputModel4 { Name = "witch"})))</div>
    <button type="submit">Submit</button>
}